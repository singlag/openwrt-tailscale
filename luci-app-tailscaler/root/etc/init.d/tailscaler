#!/bin/sh /etc/rc.common

START=95
USE_PROCD=1


get_config() {
	config_get_bool enabled $1 enabled 1
	config_get_bool acceptRoutes $1 acceptRoutes 0
	config_get_bool advertiseExitNode $1 advertiseExitNode 0
	config_get_bool notAcceptDns $1 notAcceptDns 0
	config_get_bool shieldsUp $1 shieldsUp 0
	config_get_bool statefulFiltering $1 statefulFiltering 0
	config_get_bool exitNodeAllowLan $1 exitNodeAllowLan 0
	config_get loginServer $1 loginServer ""
	config_get authkey $1 authkey ""
	config_get hostname $1 hostname ""
	config_get customFlags $1 customFlags ""
	config_get advertiseRoutes $1 advertiseRoutes ""
	config_get exitNodeConnect $1 exitNodeConnect ""
	#config_get currentflags $1 currentflags ""
}
start_service() {
	logger -t tailscaler 'start_service'
	config_load tailscaler
	config_foreach get_config settings
	if [ "$enabled" != 1 ]; then
		stop_service
		return 1
	fi
	#
	currentflags=""  ## Initialize currentflags
	logger -t tailscaler 'start tailscale'
	/etc/init.d/tailscale running || /etc/init.d/tailscale start
	logger -t tailscaler 'start tailscaler'
	# 
	procd_open_instance
	procd_set_param command /usr/sbin/tailscale up --reset
	if [ -n "$loginServer" ]; then
		procd_append_param command --login-server "$loginServer"
		currentflags="${currentflags} --login-server \"$loginServer\""
	fi
	if [ -n "$authkey" ]; then
		procd_append_param command --authkey "$authkey"
		currentflags="${currentflags} --authkey \"$authkey\""
	fi
	if [ -n "$hostname" ]; then
		procd_append_param command --hostname "$hostname"
		currentflags="${currentflags} --hostname \"$hostname\""
	fi
	if [ -n "$customFlags" ]; then
		procd_append_param command "$customFlags"
		currentflags="${currentflags} $customFlags"
	fi
	if [ "$acceptRoutes" = 1 ]; then
		procd_append_param command --accept-routes
		currentflags="${currentflags} --accept-routes"
	fi
	if [ "$advertiseExitNode" = 1 ]; then
		procd_append_param command --advertise-exit-node
		currentflags="${currentflags} --advertise-exit-node"
	fi
	if [ "$notAcceptDns" = 1 ]; then
		procd_append_param command --accept-dns=false
		currentflags="${currentflags} --accept-dns=false"
	fi
	if [ "$shieldsUp" = 1 ]; then
		procd_append_param command --shields-up
		currentflags="${currentflags} --shields-up"
	fi
	if [ "$statefulFiltering" = 1 ]; then
		procd_append_param command --stateful-filtering
		currentflags="${currentflags} --stateful-filtering"
	fi
	if [ -n "$advertiseRoutes" ];then
		procd_append_param command --advertise-routes "$advertiseRoutes"
		currentflags="${currentflags} --advertise-routes \"$advertiseRoutes\""
	fi
	if [ "$exitNodeAllowLan" = 1 ]; then
		procd_append_param command --exit-node-allow-lan-access=true
		currentflags="${currentflags} --exit-node-allow-lan-access=true"
	fi
	if [ -n "$exitNodeConnect" ];then
		procd_append_param command --exit-node "$exitNodeConnect"
		currentflags="${currentflags} --exit-node \"$exitNodeConnect\""
	fi

    	## Pass the accumulated flags to procd
    	#procd_append_param command $currentflags

	## Update /etc/config/tailscaler with the currentflags
	echo "Current flags : " $currentflags
    	uci set tailscaler.@settings[0].currentflags="$currentflags"
    	uci commit tailscaler

	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
	logger -t tailscaler 'end tailscaler'

}
stop_service() {
	/etc/init.d/tailscale stop
	/etc/init.d/tailscale running && sleep 2
}
